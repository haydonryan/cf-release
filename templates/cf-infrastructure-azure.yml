meta:
  zones:
# Azure uses availability sets not zones
#    z1: (( properties.template_only.aws.availability_zone ))
#    z2: (( properties.template_only.aws.availability_zone2 ))

  stemcell: (( merge || .meta.default_stemcell ))

  default_stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: '0000'


properties:
  <<: (( merge ))
  template_only: (( merge ))

  logger_endpoint:
    port: 4443

  loggregator:
    blacklisted_syslog_ranges:
    - start: 10.0.0.0
      end: 10.0.255.255

  ccdb:
    db_scheme: postgres
    address: (( properties.databases.address ))
    port: 5524
    roles:
      - tag: admin
        name: ccadmin
        password: admin
    databases:
      - tag: cc
        name: ccdb
        citext: true


  uaadb:
    db_scheme: postgresql
    address: (( properties.databases.address ))
    port: 5524
    roles:
      - tag: admin
        name: uaaadmin
        password: admin
    databases:
      - tag: uaa
        name: uaadb
        citext: true

  databases:
    db_scheme: postgres
    address: (( jobs.postgres_z1.networks.cf1.static_ips.[0] ))
    port: 5524
    roles:
      - tag: admin
        name: ccadmin
        password: admin
      - tag: admin
        name: uaaadmin
        password: admin
    databases:
      - tag: cc
        name: ccdb
        citext: true
      - tag: uaa
        name: uaadb
        citext: true
    collect_statement_statistics: null




  cc:
    resource_pool:
    packages:
    droplets:
    buildpacks:

  uaa:
    catalina_opts: -Xmx768m -XX:MaxPermSize=256m

  dea_next:
    deny_networks:
      - 169.254.0.0/16 # AWS Status
      - 10.0.0.0/16
    allow_networks: (( merge || ["10.0.0.2/32"] )) # Amazon DNS




compilation:
  cloud_properties:
    instance_type: Standard_A1
#    availability_zone: (( meta.zones.z1 ))


networks: (( merge ))


resource_pools:
  - name: small_z1
    cloud_properties:
      instance_type: Standard_A2
      ephemeral_disk:
        size: 10_240
        type: gp2

  - name: small_z2
    cloud_properties:
      instance_type: Standard_A1
      ephemeral_disk:
        size: 10_240

  - name: medium_z1
    cloud_properties:
      instance_type: Standard_A2
      ephemeral_disk:
        size: 10_240

  - name: medium_z2
    cloud_properties:
      instance_type: Standard_A2
      ephemeral_disk:
        size: 10_240
#      availability_zone: (( meta.zones.z2 ))

  - name: large_z1
    cloud_properties:
      instance_type: Standard_A3
      ephemeral_disk:
        size: 65_536
 #     availability_zone: (( meta.zones.z1 ))

  - name: large_z2
    cloud_properties:
      instance_type: Standard_A3
      ephemeral_disk:
        size: 65_536
#    availability_zone: (( meta.zones.z2 ))

  - name: runner_z1
    cloud_properties:
      instance_type: Standard_A6
      ephemeral_disk:
        size: 102_400
#      availability_zone: (( meta.zones.z1 ))

  - name: runner_z2
    cloud_properties:
      instance_type: Standard_A6
      ephemeral_disk:
        size: 102_400
        type: gp2

  - name: router_z1
    cloud_properties:
      instance_type: Standard_D1
      ephemeral_disk:
        size: 10_240

  - name: router_z2
    cloud_properties:
      instance_type: Standard_D1
      ephemeral_disk:
        size: 10_240

  - name: small_errand
    cloud_properties:
      instance_type: Standard_A1
      ephemeral_disk:
        size: 10_240

  - name: xlarge_errand
    cloud_properties:
      instance_type: Standard_D6




# set up static IPs
jobs:
  - name: nats_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(1) ))

  - name: nats_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(1) ))

  - name: nfs_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(2) ))

  - name: postgres_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(12) ))

  - name: router_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(5, 6, 15, 16, 17, 18, 19, 20) ))

  - name: router_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(5, 6, 15, 16, 17, 18, 19, 20) ))

  - name: loggregator_z1
    instances: 0
    networks:
      - name: cf1

  - name: loggregator_z2
    instances: 0
    networks:
      - name: cf2

  - name: doppler_z1
    instances: 1
    networks:
      - name: cf1

  - name: doppler_z2
    instances: 0
    networks:
      - name: cf2

  - name: loggregator_trafficcontroller_z1
    instances: 1
    networks:
      - name: cf1

  - name: loggregator_trafficcontroller_z2
    instances: 0
    networks:
      - name: cf2

  - name: ha_proxy_z1
    instances: 1
    networks:
      - name: cf1
        static_ips: (( static_ips(3) ))
        default:
        - dns
        - gateway
      - name: public
        static_ips:  (( merge ))
        
  - name: consul_z1
    instances: 2
    networks:
      - name: cf1
        static_ips: (( static_ips(27, 28, 29) ))

  - name: consul_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(27, 28, 29) ))

  - name: etcd_z1
    instances: 2
    networks:
      - name: cf1
        static_ips: (( static_ips(10, 25) ))

  - name: etcd_z2
    instances: 0
    networks:
      - name: cf2
        static_ips: (( static_ips(9) ))

  - name: uaa_z2
    instances: 0

  - name: hm9000_z2
    instances: 0

  - name: runner_z2
    instances: 0

  - name: api_z2
    instances: 0


  - name: api_worker_z2
    instances: 0


  - name: smoke_tests
    instances: 1
